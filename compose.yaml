version: "3.8"

services:
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    working_dir: /app
    command: npm start
    environment:
      - REACT_APP_BACKEND_URL=http://backend:8080

  backend:
    image: maven:3.8.6-eclipse-temurin-17
    container_name: backend
    working_dir: /app
    volumes:
      - ./backend:/app
      - /app/target
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: "jdbc:postgresql://db:5432/demo"
      DATABASE_USER: "postgres"
      DATABASE_PASSWORD: "meinpasswort"
    command: mvn spring-boot:run
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: meinpasswort
      POSTGRES_DB: demo
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d demo"]
      interval: 10s
      retries: 5
      timeout: 5s

volumes:
  postgres_data:
